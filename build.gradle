plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.9'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
//	id 'jacoco'
	id 'org.sonarqube' version "4.0.0.2929"
}

group = 'ASE-SpaghettiCode'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'javax.annotation:javax.annotation-api:1.3.2'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}
//
//test {
//	finalizedBy jacocoTestReport // report is always generated after tests run
//}
//jacocoTestReport {
//	dependsOn test // tests are required to run before generating the report
//}
//jacocoTestReport {
//	group = "Reporting"
//	reports {
//		xml.enabled true
//		csv.enabled false
//		html.destination file("${buildDir}/jacocoHtml")
//	}
//}

tasks.named('test') {
	useJUnitPlatform()
}


sonarqube {
	properties {
		property "sonar.projectKey", "ase-spaghetticode_travelNoteServer"
		property "sonar.organization", "ase-spaghetticode"
		property "sonar.host.url", "https://sonarcloud.io"
		property "sonar.branch.name", "main"
//		property "sonar.coverage.jacoco.xmlReportPaths", ["$buildDir/jacocoReportDir/test/jacocoTestReport.xml"]
//		property "sonar.cpd.exclusions", "**/entity/*.java,**/rest/dto/*.java"
	}
}